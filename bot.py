import logging
from aiogram import Bot, Dispatcher, types, executor
from aiogram.contrib.middlewares.logging import LoggingMiddleware
from aiogram.types import Message, CallbackQuery

# --------------------STATE--------------------#

from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.contrib.middlewares.logging import LoggingMiddleware

from Keyboards.defult import menu, filials_btn, location, filiallar, toshkent, regions, rayonlar, yunusobod

API_TOKEN = "7042370431:AAGlrQ-fw8IhiHNNAB64FBBLG7fMluuYeGI"

logging.basicConfig(level=logging.INFO)
bot = Bot(token=API_TOKEN, parse_mode='HTML')
dp = Dispatcher(bot, storage=MemoryStorage())
dp.middleware.setup(LoggingMiddleware())


class States(StatesGroup):
    location = State()
    name = State()
    pol = State()
    age = State()
    adress = State()
    phone = State()
    student = State()
    oqishjoyinomi = State()
    time = State()
    ishvaqt = State()
    ozbektili = State()
    rustili = State()
    ishjoyiohirgi = State()
    image = State()
    social = State()


@dp.message_handler(commands=['start'])
async def startt(message: types.Message):
    photo = open('images/evos.jpg', 'rb')
    await message.answer_photo(photo, reply_markup=menu)


@dp.message_handler(text="üè¢ –û –∫–æ–º–ø–∞–Ω–∏–∏")
async def company(message: types.Message):
    photo = open('images/kopm.jpg', 'rb')
    await message.answer_photo(photo, caption="""
–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏:

–°–µ—Ç—å —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –±—ã—Å—Ç—Ä–æ–≥–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è EVOS¬Æ –Ω–µ —Å—Ç–æ–∏—Ç –Ω–∞ –º–µ—Å—Ç–µ, –∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —Ä–∞—Å—Ç–µ—Ç –∏ —Ä–∞–∑–≤–∏–≤–∞–µ—Ç—Å—è –≤–º–µ—Å—Ç–µ —Å –≤–∞–º–∏ –∏ –¥–ª—è –≤–∞—Å! –ú—ã —Ä–∞—Å—à–∏—Ä—è–µ–º —Å–≤–æ—é –≥–µ–æ–≥—Ä–∞—Ñ–∏—é –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –Ω–æ–≤—ã–µ —Ñ–∏–ª–∏–∞–ª—ã –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü. 
–°–µ–π—á–∞—Å –≤ –Ω–∞—à–µ–π —Å–µ—Ç–∏ –Ω–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –±–æ–ª–µ–µ 70 —Ñ–∏–ª–∏–∞–ª–æ–≤ –ø–æ –≤—Å–µ–º—É –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω—É. –ü–æ—ç—Ç–æ–º—É –º—ã –≤—Å–µ–≥–¥–∞ –≤ –ø–æ–∏—Å–∫–µ –¥–∏–Ω–∞–º–∏—á–Ω—ã—Ö –∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç—è—Ç —Å—Ç–∞—Ç—å —á–∞—Å—Ç—å—é –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã –∏ –≥–æ—Ç–æ–≤—ã —Å—Ç—Ä–æ–∏—Ç—å —Å–≤–æ—é –∫–∞—Ä—å–µ—Ä—É –≤ EVOS¬Æ. 
EVOS¬Æ ‚Äì —ç—Ç–æ –Ω–∞–¥–µ–∂–Ω—ã–π –±—Ä–µ–Ω–¥, –∫–æ—Ç–æ—Ä–æ–º—É –¥–æ–≤–µ—Ä—è—é—Ç. –†–∞–±–æ—Ç–∞ –≤ EVOS¬Æ ‚Äì –≥–∞—Ä–∞–Ω—Ç–∏—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∫–∞ –∏ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã –∫–∞—Ä—å–µ—Ä–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞. 
–ù–∞—á–Ω–∏ —Å–≤–æ—é –∫–∞—Ä—å–µ—Ä—É –≤ EVOS¬Æ —É–∂–µ —Å–µ–π—á–∞—Å!    
    """)


@dp.message_handler(text="üìç –§–∏–ª–∏–∞–ª—ã")
async def filal(message: types.Message):
    photo = open('images/filial.jpg', 'rb')
    await message.answer_photo(photo, caption="""
EVOS - –∫—Ä—É–ø–Ω–µ–π—à–∞—è —Ñ–∞—Å—Ç—Ñ—É–¥-–∫–æ–º–ø–∞–Ω–∏—è –≤ –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω–µ. –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –æ—Ç–∫—Ä—ã—Ç–æ –±–æ–ª–µ–µ 70 —Ç–æ—Ä–≥–æ–≤—ã—Ö —Ç–æ—á–µ–∫ –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –º–Ω–æ–≥–æ–ø—Ä–æ—Ñ–∏–ª—å–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ.

–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –∫–æ–º–ø–∞–Ω–∏–∏ —ç—Ç–æ –±–æ–ª—å—à–∞—è —Å–µ–º—å—è, –∫–æ—Ç–æ—Ä–∞—è —Ä–∞–∑–≤–∏–≤–∞–µ—Ç—Å—è –≤–º–µ—Å—Ç–µ –∏ —Ä–∞—Å—Ç–µ—Ç –∏–∑–æ –¥–Ω—è –≤ –¥–µ–Ω—å. –ö–æ–º–ø–∞–Ω–∏—è EVOS —Ä–∞—Å—à–∏—Ä—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å, —Å–µ–≥–æ–¥–Ω—è –Ω–∞—Å –±–æ–ª–µ–µ –ø–æ–ª—É—Ç–æ—Ä–∞ —Ç—ã—Å—è—á. –°—Ç–∞–Ω—å —á–∞—Å—Ç—å—é –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–µ–º—å—é EVOS!    
    """, reply_markup=filials_btn)


@dp.message_handler(text="‚òïÔ∏è –ü–æ–∫–∞–∑–∞—Ç—å –±–ª–∏–∂–∞–π—à–∏–π —Ñ–∏–ª–∏–∞–ª")
async def pokazat(message: types.Message, state: FSMContext):
    await message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –±–ª–∏–∂–∞–π—à–µ–≥–æ —Ñ–∏–ª–∏–∞–ª–∞", reply_markup=location)
    await States.location.set()


@dp.message_handler(state=States.location, content_types=types.ContentType.LOCATION)
async def locationnn(message: types.Message, state: FSMContext):
    await message.answer("""
–¢–∞—à–∫–µ–Ω—Ç, —É–ª–∏—Ü–∞ –Ø–Ω–≥–∏ –°–µ—Ä–≥–µ–ª–∏
+998712031212

<a href="https://www.google.com/maps?q=41.211752,+69.229986&ll=41.211752,+69.229986&z=16">üìç –õ–æ–∫–∞—Ü–∏—è</a>
–î–∏—Å—Ç–∞–Ω—Ü–∏—è: 3.05 –∫–º    
    """)
    photo = open('images/loc.jpg', 'rb')
    await message.answer_photo(photo, caption="""
–°–µ—Ä–≥–µ–ª–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª. –Ø–Ω–≥–∏ –°–µ—Ä–≥–µ–ª–∏ - 27
+998712031212

<a href="https://www.google.com/maps?q=41.222990,+69.221526&ll=41.222990,+69.221526&z=16">üìç –õ–æ–∫–∞—Ü–∏—è</a>
–î–∏—Å—Ç–∞–Ω—Ü–∏—è: 3.72 –∫–º
    """)
    await message.answer("""
—É–ª–∏—Ü–∞ –ö–∏–ø—á–∞–∫, –¢–∞—à–∫–µ–Ω—Ç
<a href="https://www.google.com/maps?q=41.203622,+69.216008&ll=41.203622,+69.216008&z=16">üìç –õ–æ–∫–∞—Ü–∏—è</a>
–î–∏—Å—Ç–∞–Ω—Ü–∏—è: 4.44 –∫–º    
    """)


@dp.message_handler(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", state=States.location)
async def backk(message: types.Message, state: FSMContext):
    photo = open('images/filial.jpg', 'rb')
    await message.answer_photo(photo, caption="""
EVOS - –∫—Ä—É–ø–Ω–µ–π—à–∞—è —Ñ–∞—Å—Ç—Ñ—É–¥-–∫–æ–º–ø–∞–Ω–∏—è –≤ –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω–µ. –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –æ—Ç–∫—Ä—ã—Ç–æ –±–æ–ª–µ–µ 70 —Ç–æ—Ä–≥–æ–≤—ã—Ö —Ç–æ—á–µ–∫ –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –º–Ω–æ–≥–æ–ø—Ä–æ—Ñ–∏–ª—å–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ.

–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –∫–æ–º–ø–∞–Ω–∏–∏ —ç—Ç–æ –±–æ–ª—å—à–∞—è —Å–µ–º—å—è, –∫–æ—Ç–æ—Ä–∞—è —Ä–∞–∑–≤–∏–≤–∞–µ—Ç—Å—è –≤–º–µ—Å—Ç–µ –∏ —Ä–∞—Å—Ç–µ—Ç –∏–∑–æ –¥–Ω—è –≤ –¥–µ–Ω—å. –ö–æ–º–ø–∞–Ω–∏—è EVOS —Ä–∞—Å—à–∏—Ä—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å, —Å–µ–≥–æ–¥–Ω—è –Ω–∞—Å –±–æ–ª–µ–µ –ø–æ–ª—É—Ç–æ—Ä–∞ —Ç—ã—Å—è—á. –°—Ç–∞–Ω—å —á–∞—Å—Ç—å—é –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–µ–º—å—é EVOS!    
                """, reply_markup=filials_btn)


@dp.message_handler(text="üè¢ –ì–æ–ª–æ–≤–Ω–æ–π –æ—Ñ–∏—Å")
async def offfice(message: types.Message):
    photo = open('images/ofic.jpg', 'rb')
    await message.answer_photo(photo, caption="""
–ê–¥—Ä–µ—Å:  —É–ª. –§—É—Ä–∫–∞—Ç–∞ 175, 1 –ø–æ–¥—ä–µ–∑–¥, 4 —ç—Ç–∞–∂.
–û—Ä–∏–µ–Ω—Ç–∏—Ä: MAKRO THE TOWER    
    """)
    await bot.send_location(message.from_user.id, 41.302196, 69.248867)


@dp.message_handler(text="–≥. –¢–∞—à–∫–µ–Ω—Ç")
async def tashkent(message: types.Message):
    await message.answer("–≥. –¢–∞—à–∫–µ–Ω—Ç", reply_markup=filiallar)


@dp.message_handler(text="üìç Samarqand Darvoza")
async def samarqandd(message: types.Message):
    photo = open('images/samarqand.jpg', 'rb')
    await message.answer_photo(photo, caption="""
–§–∏–ª–∏–∞–ª: "–°–∞–º–∞—Ä–∫–∞–Ω–¥ –¥–∞—Ä–≤–æ–∑–∞"

–ê–¥—Ä–µ—Å: —É–ª. –ö–æ—Ä–∞—Ç–æ—à, 5–ê    
    """)
    await bot.send_location(message.from_user.id, 41.316428, 69.230965)


@dp.message_handler(text="üìç –ê–ª–∞–π—Å–∫–∏–π –±–∞–∑–∞—Ä")
async def alayskiy(message: types.Message):
    photo = open('images/alayskiy.jpg', 'rb')
    await message.answer_photo(photo, caption="""
–§–∏–ª–∏–∞–ª: –ê–ª–∞–π—Å–∫–∏–π –±–∞–∑–∞—Ä

–ê–¥—Ä–µ—Å: –ø—Ä–æ—Å–ø. –ê–º–∏—Ä–∞ –¢–µ–º—É—Ä–∞, 42

–ö–æ–Ω—Ç–∞–∫—Ç—ã: +998 71 203 12 12    
    """)
    await bot.send_location(message.from_user.id, 41.32, 69.282572)


@dp.message_handler(text="üìç –ú–∞–ª–∏–∫–∞")
async def malika(message: types.Message):
    photo = open('images/malika.jpg', 'rb')
    await message.answer_photo(photo, caption="""
–§–∏–ª–∏–∞–ª: –ú–∞–ª–∏–∫–∞

–ê–¥—Ä–µ—Å: —É–ª. –ë–æ–≥–∏—Ä–∞–≤–æ–Ω, 29

–ö–æ–Ω—Ç–∞–∫—Ç—ã: +998 71 203 12 12    
    """)
    await bot.send_location(message.from_user.id, 41.342807, 69.264684)


@dp.message_handler(text="üìç –Ø—Ö—ä—ë –ì—É–ª—è–º–æ–≤–∞, 94")
async def yahyo(message: types.Message):
    photo = open('images/yahyo.jpg', 'rb')
    await message.answer_photo(photo, caption="""
–§–∏–ª–∏–∞–ª: —É–ª–∏—Ü–∞ –Ø—Ö—ä—ë –ì—É–ª—è–º–æ–≤–∞, 94

–ê–¥—Ä–µ—Å: —É–ª–∏—Ü–∞ –Ø—Ö—ä—ë –ì—É–ª—è–º–æ–≤–∞, 94

–ö–æ–Ω—Ç–∞–∫—Ç—ã: +998 71 203 12 12 
    """)
    await bot.send_location(message.from_user.id, 41.304758, 69.284565)


@dp.message_handler(text="–ù–∞–∑–∞–¥ ‚Ü©Ô∏è")
async def backkk(message: types.Message):
    photo = open('images/evos.jpg', 'rb')
    await message.answer_photo(photo, reply_markup=menu)


@dp.message_handler(text="–ù–∞–∑–∞–¥ ‚Ü©")
async def baccc(message: types.Message):
    photo = open('images/filial.jpg', 'rb')
    await message.answer_photo(photo, caption="""
EVOS - –∫—Ä—É–ø–Ω–µ–π—à–∞—è —Ñ–∞—Å—Ç—Ñ—É–¥-–∫–æ–º–ø–∞–Ω–∏—è –≤ –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω–µ. –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –æ—Ç–∫—Ä—ã—Ç–æ –±–æ–ª–µ–µ 70 —Ç–æ—Ä–≥–æ–≤—ã—Ö —Ç–æ—á–µ–∫ –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –º–Ω–æ–≥–æ–ø—Ä–æ—Ñ–∏–ª—å–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ.

–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –∫–æ–º–ø–∞–Ω–∏–∏ —ç—Ç–æ –±–æ–ª—å—à–∞—è —Å–µ–º—å—è, –∫–æ—Ç–æ—Ä–∞—è —Ä–∞–∑–≤–∏–≤–∞–µ—Ç—Å—è –≤–º–µ—Å—Ç–µ –∏ —Ä–∞—Å—Ç–µ—Ç –∏–∑–æ –¥–Ω—è –≤ –¥–µ–Ω—å. –ö–æ–º–ø–∞–Ω–∏—è EVOS —Ä–∞—Å—à–∏—Ä—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å, —Å–µ–≥–æ–¥–Ω—è –Ω–∞—Å –±–æ–ª–µ–µ –ø–æ–ª—É—Ç–æ—Ä–∞ —Ç—ã—Å—è—á. –°—Ç–∞–Ω—å —á–∞—Å—Ç—å—é –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–µ–º—å—é EVOS!    
            """, reply_markup=filials_btn)


@dp.message_handler(text="üì± –ú–µ–Ω—é")
async def menyu(message:types.Message):
    photo = open('images/menu.jpg', 'rb')
    await message.answer_photo(photo, caption="""
<a href="https://evos.uz/">–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç Evos</a>    
    """)
    await message.answer("""
<a href="https://www.instagram.com/evosuzbekistan/">Instagram</a>|<a href="https://t.me/cloneevos_bot">Telegram</a>|<a href="https://t.me/cloneevos_bot">Facebook</a>     
    """)


@dp.message_handler(text="üó£ –ù–æ–≤–æ—Å—Ç–∏")
async def novosti(message:types.Message):
    await message.answer("""
Kompaniya yangiliklari
Aksiya
Yangi filiallar
Yangi tortlar va hk.    
    """)

@dp.message_handler(text="üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã/–ê–¥—Ä–µ—Å")
async def kontakt(message: types.Message):
    photo = open('images/kontakt.jpg', 'rb')
    await message.answer_photo(photo, caption="""
üìç–ê–¥—Ä–µ—Å:  —É–ª. –§—É—Ä–∫–∞—Ç–∞ 175, 1 –ø–æ–¥—ä–µ–∑–¥, 2 —ç—Ç–∞–∂.
üìå–û—Ä–∏–µ–Ω—Ç–∏—Ä: MAKRO THE TOWER

üì≤ –ö–æ–Ω—Ç–∞–∫—Ç—ã: +998 71 203 12 12
    """)
    await bot.send_location(message.from_user.id, 41.302196, 69.248867)



@dp.message_handler(content_types=types.ContentType.LOCATION)
async def asdfasd(message: types.Message):
    loc = message.location
    print(loc.longitude)
    print(loc.latitude)


if __name__ == '__main__':
    from vakansiya import dp
    from callcenter import dp
    from kuryer import dp
    executor.start_polling(dp, skip_updates=True)